apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: test
  labels:
    app.kubernetes.io/name: test-ansparservice
    app.kubernetes.io/instance: test-ansparservice
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/component: test-ansparservice
    app.kubernetes.io/part-of: test
    app.kubernetes.io/managed-by: helm
    owner: KieniL
  annotations:
    email: test@test.at
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
    container.apparmor.security.beta.kubernetes.io/{{ .Release.Name }}-ansparservice: runtime/default
spec:
  selector:
    matchLabels:
      app: test-ansparservice
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: test-ansparservice
        action: jwt-consumer
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        container.apparmor.security.beta.kubernetes.io/testansparservice: runtime/default
    spec:
      serviceAccountName: test-ansparservice-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: test-ansparservice
              topologyKey: kubernetes.io/hostname
            weight: 100
      terminationGracePeriodSeconds: 40
      volumes:
      - name: tmp
        emptyDir:
          medium: Memory
          sizeLimit: 200Mi
      securityContext:
        runAsUser: 20000
        runAsGroup: 20000        
        runAsNonRoot: true
        seLinuxOptions:
          level: "s0:c123,c456"
      containers:
      - name:  test-ansparservice
        image: luke19/familyansparservice@{{ .Values.ansparen.image }}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 20000
          runAsGroup: 20000
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          privileged: false
          capabilities:
            drop:
              - all
          seLinuxOptions:
            level: "s0:c123,c456"
        volumeMounts:
        - mountPath: /app/tmp
          name: tmp
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: test-config
              key: TZ
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: test-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: test-config
              key: DB_PORT
        - name: AUTH_URL
          valueFrom:
            configMapKeyRef:
              name: test-config
              key: AUTH_URL
        - name: ANSPAREN_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: test-config
              key: ANSPAREN_LOG_LEVEL
        ports:
        - containerPort: 8080 #Expose containerport to the pod
        livenessProbe: #Check that pod is ready
          httpGet:
            path: /actuator/health/liveness #path to check
            port: 8080
          initialDelaySeconds: 10 #start checking after 30 seconds
          periodSeconds: 10 #check every 30 seconds
          failureThreshold: 10
        readinessProbe: #Check that pod is healthy
          httpGet:
            path: /actuator/health/readiness #path to check
            port: 8080 #port to check
          initialDelaySeconds: 15 #start checking after 15 seconds
          periodSeconds: 10 #check every 3 seconds
          failureThreshold: 10